version: "3.5"
services:
  ruby:
    container_name: ${APP_NAME}
    hostname: ${APP_NAME}
    networks:
      - LAN
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - ${RUBY_PORT}:3000
    volumes:
      - ./:/rails
      - /tmp/sockets:/app/tmp/sockets
    environment:
      - RAILS_SERVE_STATIC_FILES=true
    stdin_open: true
    tty: true

  nginx:
    container_name: ${NGINX_NAME}
    hostname: ${NGINX_NAME}
    networks:
      - LAN
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - /tmp/sockets:/app/tmp/sockets
    depends_on:
      - ruby

  mysql:
    image: mysql:5.6
    container_name: ${DB_HOST}
    hostname: ${DB_HOST}
    networks:
      - LAN
    ports:
      - ${DB_PORT}:3306
    volumes:
      - ./database:/docker-entrypoint-initdb.d
    command: [
      --innodb-file-format=barracuda,
      --innodb-file-per-table=1,
      --innodb-large-prefix=1,
      --character-set-server=utf8,
      --collation-server=utf8_unicode_ci
    ]
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:alpine
    container_name: ${REDIS_HOST}
    hostname: ${REDIS_HOST}
    networks:
      - LAN
    ports:
      - ${REDIS_PORT}:6379

networks:
  LAN:
    driver: bridge
    name: ${LAN_NAME}
